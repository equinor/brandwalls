name: 'Deploy website'
description: 'Steps needed to deploy brandwalls to Radix'
inputs:
  imageName:
    description: 'The path to where the image is to be copied'
    required: true
  commitSha:
    description: 'sha of image to be used'
    required: false
  projectId:
    description: 'Id of the sanity project'
    required: false
  datasetName:
    description: 'Name of dataset to be used for Sanity'
    required: true
  githubToken:
    description: 'GitHub token'
    required: true
  sanityApiToken:
    description: 'Sanity API token'
    required: true
  environment:
    description: 'dev, preprod or prod'
    required: true

runs:
  using: 'composite'
  steps:
    - name: Checkout 🛎 ️
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Get long sha ️🏷️
      if: "${{ inputs.commitSha != '' }}"
      id: get-long-sha
      shell: bash
      run: |
        echo "sha=$(git rev-parse ${{ inputs.commitSha }})" >> $GITHUB_OUTPUT
    - name: Checkout specific branch 🛎️
      if: "${{ inputs.commitSha != '' }}"
      id: checkout-specific-branch
      uses: actions/checkout@v3
      with:
        repository: 'equinor/brandwalls'
        fetch-depth: 0
        ref: '${{ steps.get-long-sha.outputs.sha }}'
    - name: Set default image tag 🏷
      if: "${{ inputs.commitSha == '' }}"
      shell: bash
      id: set-default-image-tag
      run: |
        echo "IMAGE_TAG=$(echo ${GITHUB_REF##*/}-latest)" >> $GITHUB_ENV
        echo "IMAGE_TAG_SHA=$(git rev-parse --short=12 ${GITHUB_SHA})" >> $GITHUB_ENV
    - name: Set image tags based on commit sha 🏷
      if: "${{ inputs.commitSha != '' }}"
      shell: bash
      id: set-image-tag
      run: |
        echo "IMAGE_TAG=${{inputs.commitSha}}" >> $GITHUB_ENV
        echo "IMAGE_TAG_SHA=${{inputs.commitSha}}" >> $GITHUB_ENV
    - name: Build web component ⚙️
      shell: bash
      id: build
      run: |
        docker build . \
          --cache-from ${{ inputs.imageName }}:${{ env.IMAGE_TAG}} \
          --build-arg ARG_SANITY_PROJECT_ID=${{ inputs.projectId }} \
          --build-arg ARG_SANITY_DATASET=${{ inputs.datasetName }} \
          --build-arg ARG_SANITY_API_TOKEN=${{ inputs.sanityApiToken }} \
          --build-arg ARG_ENV=${{ inputs.environment }} \
          --file web/Dockerfile \
          --tag ${{ inputs.imageName }}:${{ env.IMAGE_TAG }} \
          --tag ${{ inputs.imageName }}:${{ env.IMAGE_TAG_SHA }} \
          --build-arg BUILDKIT_INLINE_CACHE=1
    - name: Push the image to GHCR ☁
      shell: bash
      id: push-to-ghcr
      run: |
        echo "${{ inputs.githubToken }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
        docker push ghcr.io/equinor/brandwalls/web-${{ inputs.datasetName  }} --all-tags
    - name: Get token 🔑
      id: get-token
      uses: ./.github/workflows/get-auth-token/

    # PLAYGROUND CLUSTER
    - name: Deploy to Radix Playground 🚀
      id: deploy-playground
      uses: equinor/radix-github-actions@master
      with:
        args: >
          create job
          deploy
          --token-environment
          --component frontend
          --context playground
          -a brandwalls
          -e ${{ inputs.environment }}
          -f
